version: "3.9"
services:
  webserver:
    build:
      context: bin/webserver/
    container_name: "${APP_NAME-my}-webserver"
    environment:
      XDEBUG_CONFIG: remote_host=host.docker.internal remote_port=9001 remote_enable=1
    volumes:
      - ./www/blog/:/var/www/blog/
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
      - ${VHOSTS_DIR-./config/vhosts}:/etc/apache2/sites-enabled
      - ${LOG_DIR-./logs/apache2}:/var/log/apache2
    ports:
      - "${HOST_MACHINE_UNSECURE_HOST_PORT}:80"
      - "${HOST_MACHINE_SECURE_HOST_PORT}:443"
    networks:
      - backend

  mysql:
    image: mysql:5.7
    container_name: "${APP_NAME-my}-mysql"
    working_dir: /application
    volumes:
      - mysql_data:/application
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${HOST_MACHINE_MYSQL_PORT}:3306"
    networks:
      - backend

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - 8001:80
    container_name: "${APP_NAME-my}-pma"
    environment:
      - PMA_HOST=mysql
      - VIRTUAL_HOST=pma.boilerplate.docker
      - VIRTUAL_PORT=80
    volumes:
      - phpmyadmin:/sessions
    networks:
      - backend

  redis:
    image: redis
    ports:
      - 6379:6379
    container_name: "${APP_NAME-my}-redis"
    working_dir: /data
    volumes:
      - redis_data:/data
    networks:
      - backend

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - backend

volumes:
  mysql_data:
  phpmyadmin:
  redis_data:
  webserver_data:

networks:
  backend:
    driver: "bridge"
